$grid-colors: (
  pink:   #E50666,
  purple: #A100CD,
  blue:   #04B4B7,
  green:  #59D37A,
  yellow: #F2D208
);
$transition-time: 0.3s;

@mixin ui-ele($bgColor: #000, $color: #fff) {
  background: $bgColor;
  color: $color;
  border-radius: 5px;
  padding: 10px 25px;
  h3 {
    margin: 10px 0;
  }
  ul {
    list-style: none;
    padding: 0;
  }
}

body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

html, body, #root {
  height: 100%;
}

button {
  border: 0;
  border-radius: 3px;
  padding: 0.25em 0.5em;
  cursor: pointer;
  transition: all ease 0.2s;
}

.layout {
  height: 100%;
  display: flex;
  .left, .middle, .right {
    height: 100%;
    position: relative;
  }
  .left, .right {
    flex: 1;
  }
  .middle {
    flex: 0 0 400px;
    min-width: 400px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

#grid {
  line-height: 0;
  margin: 10px 0;
  table {
    margin: auto;
    td {
      position: relative;
      height: 40px;
      width: 40px;
      div {
        position: absolute;
        top: 1px;
        right: 1px;
        bottom: 1px;
        left: 1px;
        @each $color, $hex in $grid-colors {
          &.#{$color} span {
            background: $hex;
          }
        }
        &.transfiguration {
          &:after {
            content: '';
            position: absolute;
            top: 1px;
            right: 1px;
            bottom: 1px;
            left: 1px;
            border: 2px solid map-get($grid-colors, yellow);
          }
        }
      }
      span {
        position: absolute;
        height: 50%;
        width: 50%;
        transition: background-color $transition-time ease;
        transform: rotateZ(360deg);
        &:nth-child(1) {
          top: 0;
          left: 0;
        }
        &:nth-child(2) {
          top: 0;
          right: 0;
        }
        &:nth-child(3) {
          bottom: 0;
          left: 0;
        }
        &:nth-child(4) {
          bottom: 0;
          right: 0;
        }
      }
    }
  }
  .multiplyer {
    text-align: center;
    line-height: 1em;
  }
}

#inventory {
  $bgColor: #DC9654;
  $color: darken($bgColor, 20%);
  @include ui-ele($bgColor, $color);
  position: relative;
  margin-bottom: 10px;
  flex-grow: 1;
  h3 {
    display: inline-block;
  }
  ul {
    margin-top: 0;
    li {
      width: 40px;
      height: 40px;
      line-height: 40px;
      margin: 5px;
      display: inline-block;
      text-align: center;
      @each $color, $hex in $grid-colors {
        &.#{$color} {
          background: $hex;
          color: darken($hex, 20%);
        }
      }
      &.potion {
        position: relative;
        &:before {
          content: '';
          background: no-repeat center;
          background-size: contain;
          position: absolute;
          left: 0;
          height: 100%;
          width: 100%;
          z-index: 2;
        }
        .color {
          display: block;
          border-radius: 50%;
          position: absolute;
          z-index: 1;
        }
        .amt {
          position: absolute;
          z-index: 3;
          bottom: 5px;
          right: 5px;
          color: white;
          line-height: 0;
          text-shadow: 0 0 5px rgba(0,0,0,0.8);
        }
        &.tube {
          &:before {
            background-image: url(../img/flask-tube.png);
          }
          .color {
            transform: rotate(135deg);
            border-radius: 0;
            height: 15px; width: 20px;
            top: 20px; left: 3px;
          }
        }
        &.round {
          &:before {
            background-image: url(../img/flask-round.png);
          }
          .color {
            height: 30px; width: 30px;
            top: 8px; left: 3px;
          }
        }
        &:hover {
          animation: clink .5s;
        }
      }
    }
  }
  .gold {
    color: #EFC338;
    margin-left: 15px;
  }
}

#recipes {
  $bgColor: #E8E8E8;
  $color: darken($bgColor, 30%);
  @include ui-ele($bgColor, $color);

  margin: 10px;
  ul {
    li {
      padding: 5px 0;
      div {
        display: inline-block;
        &.name {
          width: 90px;
        }
        &.mats {
          * + * {
            margin-left: 5px;
          }
          span {
            display: inline-block;
          }
        }
      }
      @each $color, $hex in $grid-colors {
        .#{$color} {
          transition: all 0.2s ease;
          color: $hex;
        }
        &.canMake .#{$color} {
          color: white;
          text-shadow: 0px 0px 2px darken($hex, 10%);
        }
        &.canMake:hover .#{$color} {
          text-shadow: 0px 0px 2px darken($hex, 15%),
                       0px 0px 2px darken($hex, 15%);
        }
      }
      &.canMake {
        cursor: pointer;
        .name {
          transition: all 0.2s ease;
          color: white;
          text-shadow: 0px 0px 2px rgba(0, 0, 0, 1);
        }
        &:hover {
          .name {
            text-shadow: 0px 0px 2px rgba(0, 0, 0, 1),
                         0px 0px 2px rgba(0, 0, 0, 1);
          }
        }
      }
    }
  }
}

#orders {
  $bgColor: #528DEA;
  $color: darken($bgColor, 30%);
  @include ui-ele($bgColor, $color);

  margin: 10px;
  button {
    background: darken($bgColor, 30%);
    color: $bgColor;
    &:hover {
      background: darken($bgColor, 20%);
    }
  }

  .order {
    margin-top: 5px;
    font-size: 14px;
    position: relative;
    padding: 5px;
    border-radius: 5px;
    border: 1px solid lighten($bgColor, 10%);
    ul {
      margin: 0
    }
    .reward {
      color: #EFC338;
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
    }
    &.canFill {
      color: white;
      cursor: pointer;
    }
  }
}

#cauldron, #orb {
  position: absolute;
  bottom: 10px;
  left: 10px;
  right: 10px;
  height: 20%;
}

#cauldron {
  @include ui-ele(#1A1A1A);
}

#orb {
  @include ui-ele(#3A3A3A);
}

// Feedback animation
@keyframes feedback {
  from, to {
    transform: translate3d(0, 0, 0);
  }

  10%, 50%, 90% {
    transform: translate3d(-2px, 0, 0);
  }

  30%, 70% {
    transform: translate3d(2px, 0, 0);
  }
}
.feedback {
  animation-duration: $transition-time;
  animation-fill-mode: both;
  animation-name: feedback;
}

// Popping animation
@keyframes pop {
  0%, 10%, 100% {
    top: 1px;
    right: 1px;
    bottom: 1px;
    left: 1px;
  }
  65% {
    top: 15%;
    right: 15%;
    bottom: 15%;
    left: 15%;
  }
}
@keyframes popSpan {
  0%, 30% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(90deg);
  }
}
@keyframes popSpanInverse {
  0%, 20% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(-90deg);
  }
}

.pop div {
  animation: pop $transition-time 1 ease-in-out both;
  span {
    animation: popSpan $transition-time 1 ease-in-out both;
  }
}

@keyframes clink {
  0% { transform: rotate(0deg) }
  25% { transform: rotate(15deg) }
  50% { transform: rotate(-15deg) }
  75% { transform: rotate(5deg) }
  100% { transform: rotate(0deg) }
}

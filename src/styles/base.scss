body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

$grid-colors: (
  pink:   #E50666,
  purple: #A100CD,
  blue:   #04B4B7,
  green:  #59D37A,
  yellow: #F2D208
);
$transition-time: 0.3s;

.App {
  width: 500px;
  margin: 0 auto;
  padding-top: 50px;
}

.right {
  float: right;
}

#grid {
  line-height: 0;
  float: left;
  td {
    position: relative;
    height: 30px;
    width: 30px;
    div {
      position: absolute;
      top: 1px;
      right: 1px;
      bottom: 1px;
      left: 1px;
      @each $color, $hex in $grid-colors {
        &.#{$color} span {
          background: $hex;
        }
      }
    }
    span {
      position: absolute;
      height: 15px;
      width: 15px;
      transition: background-color $transition-time ease;
      transform: rotateZ(360deg);
      &:nth-child(1) {
        top: 0;
        left: 0;
      }
      &:nth-child(2) {
        top: 0;
        right: 0;
      }
      &:nth-child(3) {
        bottom: 0;
        left: 0;
      }
      &:nth-child(4) {
        bottom: 0;
        right: 0;
      }
    }
  }
}

#inventory, #recipes {
  border-radius: 5px;
  padding: 10px 25px;
  color: white;
  h3 {
    margin: 10px 0;
  }
  ul {
    list-style: none;
    padding: 0;
  }
}

#inventory {
  $bgColor: #DC9654;
  background: $bgColor;
  color: darken($bgColor, 20%);
  margin-bottom: 20px;
  .totals {
    * + * {
      margin-left: 5px;
    }
    li {
      width: 40px;
      height: 40px;
      line-height: 40px;
      display: inline-block;
      text-align: center;
      @each $color, $hex in $grid-colors {
        &.#{$color} {
          background: $hex;
          color: darken($hex, 20%);
        }
      }
    }
  }
  .potions {
    .name, .amt {
      display: inline-block;
    }
    .name {
      width: 100px;
    }
  }
}

#recipes {
  $bgColor: #E8E8E8;
  background: $bgColor;
  color: darken($bgColor, 30%);
  ul {
    li {
      padding: 5px 0;
      div {
        display: inline-block;
        &.name {
          width: 90px;
        }
        &.mats {
          * + * {
            margin-left: 5px;
          }
          span {
            display: inline-block;
          }
        }
      }
      @each $color, $hex in $grid-colors {
        .#{$color} {
          transition: all 0.2s ease;
          color: $hex;
        }
        &.canMake .#{$color} {
          color: $bgColor;
          text-shadow: 0px 0px 6px darken($hex, 10%);
        }
        &.canMake:hover .#{$color} {
          text-shadow: 0px 0px 6px darken($hex, 15%),
                       0px 0px 6px darken($hex, 15%);
        }
      }
      &.canMake {
        cursor: pointer;
        .name {
          transition: all 0.2s ease;
          color: $bgColor;
          text-shadow: 0px 0px 6px rgba(0, 0, 0, 1);
        }
        &:hover {
          .name {
            text-shadow: 0px 0px 6px rgba(0, 0, 0, 1),
                         0px 0px 6px rgba(0, 0, 0, 1);
          }
        }
      }
    }
  }
}

// Feedback animation
@keyframes feedback {
  from, to {
    transform: translate3d(0, 0, 0);
  }

  10%, 50%, 90% {
    transform: translate3d(-2px, 0, 0);
  }

  30%, 70% {
    transform: translate3d(2px, 0, 0);
  }
}
.feedback {
  animation-duration: $transition-time;
  animation-fill-mode: both;
  animation-name: feedback;
}

// Popping animation
@keyframes pop {
  0%, 10%, 100% {
    top: 1px;
    right: 1px;
    bottom: 1px;
    left: 1px;
  }
  65% {
    top: -3px;
    right: -3px;
    bottom: -3px;
    left: -3px;
  }
}
@keyframes popSpan {
  0%, 30% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(90deg);
  }
}
@keyframes popSpanInverse {
  0%, 20% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(-90deg);
  }
}

.pop div {
  animation: pop $transition-time 1 ease-in-out both;
  span {
    animation: popSpan $transition-time 1 ease-in-out both;
  }
}
